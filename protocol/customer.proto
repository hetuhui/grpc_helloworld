syntax = "proto3";
package customer;

//Customer service definition
service Customer {
	//Get all customers with a filter - A server-client streaming RPC
	//A response-streaming RPC where the client sends a request to the server and gets a stream to read a 
	//sequence of messages back. The client reads from the returned stream until there are no more messages. As //you can see in the example, you specify a response-streaming method by placing the stream keyword before  //the response type.

	// clientside querying(?)
	rpc GetCustomers(CustomerFilter) returns (stream CustomerRequest){}

	//Create a new customer - A simple RPC where the client sends a request to the server using the stub and 
	// waits for a response to come back, just like a normal function call.

	// serverside (?)
	rpc CreateCustomer(CustomerRequest) returns (CustomerResponse){}
}


//Request message for new customer
message CustomerRequest{
	int32 id = 1;
	string firstName = 2;
	string lastName = 3;
	string email = 4;
	string phone = 5;

	message Address{
		int32 flatno = 1;
		string building = 2;
		string locality = 3;
		string city = 4;
		string country = 5;
		bool isShippingAddress = 6;
	}

	repeated Address addresses = 6;
}

message CustomerResponse{
	int32 id = 1;
	bool success = 2;
}

message CustomerFilter{
	string keyword = 1;
}